# Default values for quarkus-redpanda-mtls.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/jayghiya/quarkus-redpanda-tls
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

config:
  redpandaClusterName: cluster-sample-mtls

pod: 
  env:
    - name: SPARTAN_KAFKA_SERVER_ADDRESS
      value: "cluster-sample-mtls.redpanda-system.svc.cluster.local:9092"
    - name: SPARTANS_KAFKA_SCHEMA_REGISTRY_URL
      value: "cluster-sample-mtls-cluster.redpanda-system.svc.cluster.local:8081"
    - name: REDPANDA_SSL_TRUSTSTORE_LOCATION
      value: "/var/private/ssl/ca/truststore.jks"
      # valueFrom:
      #     secretKeyRef:
      #         name: "{{ .Values.config.redpandaClusterName }}-redpanda"
      #         key: ca.crt
    # - name: REDPANDA_SSL_TRUSTSTORE_PASSWORD
    #   valueFrom:
    #       secretKeyRef:
    #           name: "{{ .Values.config.redpandaClusterName }}-redpanda"
    #           key: tls.key
    - name: REDPANDA_SSL_KEYSTORE_LOCATION
      value: "/var/private/ssl/keystore.jks"
      # valueFrom:
      #     secretKeyRef:
      #         name: "{{ .Values.config.redpandaClusterName }}-user-client"
      #         key: tls.crt
    - name: REDPANDA_SSL_KEYSTORE_KEY
      value: "/var/private/ssl/tls.key"
      # valueFrom:
      #     secretKeyRef:
      #         name: "{{ .Values.config.redpandaClusterName }}-user-client"
      #         key: tls.key                              
    - name: REDPANDA_SSL_KEYSTORE_PASSWORD
      valueFrom:
          secretKeyRef:
              name: "{{ .Values.config.redpandaClusterName }}-keystore"
              key: password
    - name: REDPANDA_SASL_MECHANISM
      value: "PLAIN"              
    - name: KUBERNETES_OTLP_ENDPOINT
      value: "http://my-release-signoz-otel-collector.platform.svc.cluster.local:4317"
    - name: QUARKUS_OPENTELEMETRY_TRACER_RESOURCE_ATTRIBUTES
      value: "service.name=quarkus-http-redpanda"

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
  #kubernetes.io/hostname: "gke-spartansdataplatform-default-pool-6c2f370c-vdfq"

tolerations: []

affinity: {}
